{%extends 'layout.htm'%}
{%from "macro/nobtnmodal.htm" import noBtnModal%}
{%block main%}

<div class="container mt-5 pt-5">
        <ul class="nav nav-tabs" id="myTab" role="tablist">
            <li class="nav-item">
                <a class="nav-link active" id="memo-tab" data-toggle="tab" href="#memo" role="tab" aria-controls="memo"
                aria-selected="true">Memo</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="checklist-tab" data-toggle="tab" href="#checklist" role="tab" aria-controls="checklist"
                aria-selected="false">Checklist</a>
            </li>
        </ul>
        <div class="tab-content" id="myTabContent">
            <div class="tab-pane fade show active" id="memo" role="tabpanel" aria-labelledby="memo-tab">
                <div class="mt-5">
                    <div id="hbsMemolist"></div>
                    <script id="memoNote-template" type="text/x-handlebars-template">
                        {% raw %}
                        <div class="row">
                        {{# each data}}
                        <div class="col-lg-3 col-md-4 col-sm-6 d-flex justify-content-around align-items-stretch mb-5">
                            <div id="memocard{{id}}" class="card">
                                <div class="card-body">
                                    <h5 name='memoTitle' class="card-title mb-2 text-center" style="display:block">{{name}}</h5>
                                    <textarea id="editMemoTitle{{id}}" style="display:none">{{name}}</textarea>
                                    <div class="container my-5">
                                        <div id="memo{{id}}" class="custom-control text-left">
                                            <h6 name='memoContent' style="display:block">{{rescp content}}</h6>
                                            <textarea id="editMemoContent{{id}}" style="display:none" class="ml-0 pl-0">{{rescp content}}</textarea>
                                        </div>
                                    </div>
                                    <div class="d-flex flex-column">
                                    <div class="row" name="options">
                                        <a id="edit{{id}}" name="edit" onclick="editList({{id}}, 'memo')" class="card-link col text-primary">수정하기</a>
                                        <a id="del{{id}}" name="del" onclick="delList({{id}}, 'memo')" class="card-link col text-primary">삭제하기</a>
                                        <a id="confirm{{id}}" name="confirm" onclick="confirmEdit({{id}})" class="card-link col text-primary" style="display:none">확인</a>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    {{/each}}
                </div>
                {% endraw %}
            </script>
                </div>
            </div>

            <div class="tab-pane fade" id="checklist" role="tabpanel" aria-labelledby="checklist-tab">
                <div class="mt-5">
                    <div id="hbsChecklist"></div>
                    <script id="checkNote-template" type="text/x-handlebars-template">
                        {% raw %}
                        <div class="row">
                        {{# each data}}
                        <div class="col-lg-3 col-md-4 d-flex align-items-stretch mb-5">
                            <div id="checkcard{{id}}" name="checklist{{id}}" class="card">
                                <div class="card-body">
                                    <h5 name='checkTitle' class="card-title mb-2 text-center" style="display:block">{{name}}</h5>
                                    <textarea id="editCheckTitle{{id}}" style="display:none">{{name}}</textarea>
                                    {{#each content}}
                                    <div class="custom-control custom-checkbox check{{../id}}">
                                        <input type="checkbox" class="custom-control-input" id="{{../id}}load{{@index}}">
                                        <label class="custom-control-label" for="{{../id}}load{{@index}}">{{this}}</label>
                                    </div>
                                    {{/each}}
                                    <div id="checkarea{{id}}">
                                        </div>
                                    <div class="add{{id}}" style="display:none"> 
                                        <textarea id="editCheckContent{{id}}"></textarea>
                                    </div>

                                    <div class="d-flex flex-column">
                                    <div class="row">
                                        <a id="checkEdit{{id}}" name="edit" onclick="editList({{id}}, 'check')" class="card-link col text-primary">수정하기</a>
                                        <a id="checkDel{{id}}" name="del" onclick="delList({{id}}, 'check')" class="card-link col text-primary">삭제하기</a>
                                        <a id="checkAdd{{id}}" name="checkadd" onclick="addCheckEdit({{id}})" class="card-link col text-primary" style="display:none">추가</a>
                                        <a id="checkSave{{id}}" name="confirm" onclick="saveCheck({{id}})" class="card-link col text-primary" style="display:none">저장</a>
                                    </div>
                                </div>
                                </div>
                            </div>
                        </div>
                        {{/each}}
                        </div>
                        {% endraw %}
                    </script>
                </div>
            </div>
</div>

<script>

var checktemplate;
var memotemplate;

Handlebars.registerHelper('rescp', function(data) {
    return new Handlebars.SafeString(this.content.replace(/\n/g, "<br>"))
});


function delList(id, mode) {
    if (confirm('삭제하시겠습니까?')== true) {
        console.log('/' + mode + 'list/delete/{{userid}}/' + String(id))
        delAjax('/' + mode + 'list/delete/{{userid}}/' + String(id), function(res) {
            $('#' + mode + 'card' + String(id)).remove()
        })
    }
    else {return ''}
}

function saveCheck(id) {
    var newCheck = {}
    newCheck['name'] = $('h5[name="checkTitle"]').text().trim();
    newCheck['checklist'] = $('#checkarea').text().trim().split("     ")
    sendAjax('/checklist/edit/{{userid}}/' + id, 'POST', newMemo, function(res) {
        console.log(res)
        $('h5[name="checkTitle"]').text(newCheck['name'])
        beforeEdit()
        return
    })

}


function beforeEdit(ids, divs, mode) {
    if (mode ==='memo') {
        $(divs).find("h5").css('display','block')
        $(divs).find("h6").css('display','block')
        $(divs).find("textarea").css('display','none')
        $('#edit' + ids).show()
        $('#del' + ids).show()
        $('#confirm' + ids).css('display', 'none')
    }
    else {
        $('#newCheck' + ids).css('display', 'none')
        $('#checkEdit' + ids).show()
        $('#checkDel' + ids).show()
        $('#checkAdd' + ids).css('display','none')
    }
}

var num = 1;
function editList(id, mode) {
    var ids = String(id)
    if (mode === 'memo') {
        var title = $("#editMemoTitle" + ids)
        var content = $('#editMemoContent' + ids)
       var divs = $('#memocard' + ids)
        content.val().replace(/<br/g, '\n')
        $(divs).find("h6").css('display','none')
        content.css('display','block')
        title.css('display', 'block')
        $('#edit' + ids).hide()
        $('#del' + ids).hide()
        $('#confirm' + ids).css('display', 'block')
        $(divs).find("h5").css('display','none')
    } 
    else {
        $('#checkSave' + ids).css('display','block')
        $('#checkcard' + ids + ' h5').css('display','none')
        $('#editCheckTitle' + ids).css('display','block')
        $('#checkAdd' + ids).css('display','block')
        $('#checkDel' + ids).hide()
        $('#checkEdit' + ids).hide()
        $('div.add'+ids).css('display','block')
        var divcnt = $('#checkcard' + ids + ' div.card-body div.check' + ids)
        for (var k =0; k<divcnt.length; k++) {
            $(divcnt[k]).append('<span type="button" class="badge badge-danger float-right"><i class="fas fa-times" aria-hidden="true"></i></span>')
        }
        delList(ids)
    }   
}

function delList(ids) {
    $("div[name='checklist" + ids +"'] span").click( function() {
            $(this).closest("div").remove()
        })
}
function addCheckEdit(id) {
    var ids = String(id);   
    var editCheck = $('#editCheckContent' + ids)
    var htmls = '<div class="custom-control custom-checkbox" name="checklist' + ids +'" id="newcheck' + String(num) + '"> \
    <input type="checkbox" class="custom-control-input" id="' + String(num) + '"' + '>\
    <label class="custom-control-label" id="newlabel' + String(num) + '"' + '\
    for="' + String(num) + '"> </label> <span type="button" class="badge badge-danger float-right"><i class="fas fa-times" aria-hidden="true"></i></span> </div>';
    $(htmls).appendTo('#checkarea'+ids)
    delList(ids)
    $('#newlabel' + String(num)).text(editCheck.val());
    num = num + 1;
    editCheck.val('')
}

function confirmEdit(id) {
    var ids = String(id)
    var divs = $("#memocard" + ids)
    var newMemo = {}
    newMemo['name'] = $('#editMemoTitle' + ids).val()
    newMemo['content'] = $('#editMemoContent'+ids).val()
    sendAjax('/memo/edit/{{userid}}/' + ids, 'POST', newMemo, function(res) {
        console.log(res)
        $(divs).find("h5").text(newMemo['name'])
        $(divs).find("h6").html((newMemo['content']).replace(/\n/g, '<br>'))
        beforeEdit(ids, divs, 'memo')
        return
    })

}

$(document).ready(function () {
    getAjax('/memo/{{userid}}', 'GET', function(res) {
        console.log("Memo>>", res)
        hbs('memoNote-template', {'data':res}, 'hbsMemolist')
    });
});

$('#checklist-tab').click( function() {
    getAjax('/checklist/{{userid}}', 'GET', function(res) {
        console.log("Res>>>>>", res)
        hbs('checkNote-template', {'data':res}, 'hbsChecklist')
    });
})


function hbs(sourceId, data, resultId) {
    var source = document.getElementById(sourceId).innerHTML;
    var template = Handlebars.compile(source);
    if (resultId === 'hbsChecklist') {
        checktemplate = template;
    }
    else if (resultId === 'hbsMemolist'){
        memotemplate = template;
    }
    render(template, data, resultId)
    } 

function render(template, data, resultId) {
  document.getElementById(resultId).innerHTML = template(data);
  } 

</script>
{%endblock main%}